{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{# Get breadcrumbs block #}
{% set breadcrumbs = drupal_entity('block', 'menu_breadcrumbs') %}

{% if content.field_people_name[0] and content.field_people_last_name[0] %}
  {% set full_name = content.field_people_name[0]['#text'] ~ ' ' ~ content.field_people_last_name[0]['#text'] %}
{% endif %}

{# Set string of areas of specialization from array #}
{% if content.field_people_area[0] %}
  {% set areas = [] %}

  {# Get number of items #}
  {% if content.field_people_area['#items'].getIterator() %}
    {% set item_count = content.field_people_area['#items'].getIterator()|length - 1 %}
  {% endif %}

  {# For each item add to areas array #}
  {% for i in 0..item_count %}
    {% set areas = areas|merge([content.field_people_area[i]['#plain_text']]) %}
  {% endfor %}
{% endif %}

{# Set string of instruments from array #}
{% if content.field_people_instrument[0] %}
  {% set instruments_arr = [] %}

  {# Get number of items #}
  {% if content.field_people_instrument['#items'].getIterator() %}
    {% set item_count = content.field_people_instrument['#items'].getIterator()|length - 1 %}
  {% endif %}

  {# For each item add to instruments array #}
  {% for i in 0..item_count %}
    {% set instruments_arr = instruments_arr|merge([content.field_people_instrument[i]['#plain_text']]) %}
  {% endfor %}
{% endif %}

{# Check the role, position and instruments, create string #}
{% if content.field_people_role[0] %}
  {% set role = content.field_people_role[0]['#markup'] %}

  {% if role == 'faculty' %}
    {% set position = content.field_people_faculty_position[0] ? content.field_people_faculty_position[0]['#plain_text'] %}

    {% if instruments_arr %}
      {% set instruments = instruments_arr|join(', ') %}
    {% endif %}

    {% if position and instruments %}
      {% set title_suffix = position ~ ': ' ~ instruments %}
    {% elseif position and not instruments %}
      {% set title_suffix = position %}
    {% elseif instruments and not position %}
      {% set title_suffix = instruments %}
    {% endif %}

  {% elseif role == 'staff' %}
    {% set title_suffix = content.field_people_staff_position[0] ? content.field_people_staff_position[0]['#plain_text'] %}
  {% endif %}
{% endif %}

{# Check if the feature media type exists #}
{% if content.field_people_enable_media[0] %}
  {# Get value of feauture media type #}
  {% set feature_media_list_type = content.field_people_enable_media[0]['#markup'] %}

  {# If "default" get dynamic auto-generated view of realted content #}
  {% if feature_media_list_type == 'view' %}
    {% set featured_media = drupal_view('media_related_to_content', 'media_related_program') %}
    {% set media_display = 'default' %}

  {# If "manual", check for amount of items #}
  {% elseif feature_media_list_type == 'manual' %}
    {% if content.field_people_featured_media[0] %}
      {% set media_arr = [] %}
      
      {# Get the number of media items #}
      {% set media_count = content.field_people_featured_media['#items'].getIterator()|length - 1 %}

      {% set media_display = 'carousel' %}
      {# Create array with all items  #}
      {% for i in 0..media_count %}
        {% set media_arr = media_arr|merge([content.field_people_featured_media[i]]) %}
      {% endfor %}
   
    {% endif %}

    {% set featured_media = media_arr ? media_arr : media %}
  {% endif %}
{% endif %}


{% include "@layouts/main/main--people.twig" with {
    directory: 'themes/utmusic',
    breadcrumbs: breadcrumbs,
    messages: drupal_entity('block', 'messages'),
    tabs: drupal_entity('block', 'tabs'),
    header_variation: content.field_people_image[0] ? 'person' : 'person-text',
    image: content.field_people_image[0] ? content.field_people_image,
    title: full_name,
    title_suffix: title_suffix,
    email: content.field_people_email[0] ? content.field_people_email[0]['#context']['value'],
    phone: content.field_people_phone[0] ? content.field_people_phone[0]['#context']['value'],
    website_url: content.field_people_website[0] ? content.field_people_website[0]['#url'],
    discovery_url: content.field_people_research_profile[0] ? content.field_people_research_profile[0]['#url'],
    pronunciation: content.field_people_pronunciation[0] ? content.field_people_pronunciation,
    prononun: content.field_people_pronouns[0] ? content.field_people_pronouns[0]['#text'],
    areas: areas,
    profile_type: content.field_people_profile_type[0] ? content.field_people_profile_type[0]['#markup'],
    education: content.field_people_education[0] ? content.field_people_education,
    background: content.field_people_background[0] ? content.field_people_background,
    activities: content.field_people_activities[0] ? content.field_people_activities,
    teaching: content.field_people_teaching[0] ? content.field_people_teaching,
    creative_works: content.field_people_creative_works[0] ? content.field_people_creative_works,
    custom_content: content.field_people_custom_content[0] ? content.field_people_custom_content,
    media_display: media_display,
    featured_media: featured_media,
    number_items: media_count
  }
%}

{{ attach_library('utmusic/carousel-media') }}
