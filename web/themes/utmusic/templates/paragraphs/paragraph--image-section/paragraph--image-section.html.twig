{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{# Check if there is an image #}
{% if content.field_image_section_image[0] %}
  {# Get image path, alt and image style field #}
  {% set image_file_path = content.field_image_section_image[0]['#media'].field_ed_image_image.entity.uri.value %}
  {% set image_file_alt = content.field_image_section_image[0]['#media'].field_ed_image_image.0.alt %}
  {% set image_file_width = content.field_image_section_image[0]['#media'].field_ed_image_image.0.width %}
  {% set image_file_height = content.field_image_section_image[0]['#media'].field_ed_image_image.0.height %}
  {% set image_style_field = content.field_image_section_image_crop[0] ? content.field_image_section_image_crop[0]['#markup'] %}

  {# check image style and get responsive image style #}
  {% if image_style_field == 'landscape_2_1' %}
    {% set responsive_image_style = 'text_image_landscape_2_1' %}
  {% elseif image_style_field == 'landscape_3_2' %}
    {% set responsive_image_style = 'text_image_landscape_3_2' %}
  {% elseif image_style_field == 'landscape_4_3' %}
    {% set responsive_image_style = 'text_image_landscape_4_3' %}
  {% elseif image_style_field == 'portrait_1_2' %}
    {% set responsive_image_style = 'text_image_portrait_1_2' %}
  {% elseif image_style_field == 'portrait_3_4' %}
    {% set responsive_image_style = 'text_image_portrait_3_4' %}
  {% elseif image_style_field == 'square_1_1' %}
    {% set responsive_image_style = 'text_image_square_1_1' %}
  {% else %}
    {% set responsive_image_style = 'text_image_scale_width' %}
  {% endif %}

  {% if responsive_image_style %}
    {# create responsive image #}
    {% set image = drupal_image(image_file_path, responsive_image_style, {'alt': image_file_alt, 'width': image_file_width, 'height': image_file_height} ,responsive=true) %}
  {% endif %}
{% endif %}


{% set icon_file_type = content.field_image_section_icon[0] ? content.field_image_section_icon[0]['#media'].field_media_image.entity.filemime.value %}
{% set icon = content.field_image_section_icon[0] ? content.field_image_section_icon %}

{% include "@molecules/image/image.twig" with {
    directory: 'themes/mainspring-theme',
    image: image,
    variation: content.field_image_section_img_decor[0] ? content.field_image_section_img_decor[0]['#markup'],
    icon_file_type: icon_file_type,
    icon: icon,
    icon_size: content.field_image_section_icon[0] ? content.field_image_section_icon[0]['#media'].field_media_image_svg_size.0.value,
    icon_alignment: content.field_image_section_icon_align[0] ? content.field_image_section_icon_align[0]['#markup'],
  } only
%}
