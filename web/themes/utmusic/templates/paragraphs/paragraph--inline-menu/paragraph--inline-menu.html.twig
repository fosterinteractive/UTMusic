{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set variation = content.field_inline_menu_variation[0] ? content.field_inline_menu_variation[0]['#markup'] %}
{% set variation = variation == 'null' ? false : variation %}


{% set items = [] %}

{% if content.field_inline_menu_links[0] %}
  {# Get number of items #}
  {% if content.field_inline_menu_links['#items'].getIterator() %}
    {% set item_count = content.field_inline_menu_links['#items'].getIterator()|length %}
  {% endif %}

{# For each item add to items array #}
  {% for i in 0..item_count - 1 %}
    {% set items = items|merge([{
      item_text: content.field_inline_menu_links[i]['#title'],
      item_url: content.field_inline_menu_links[i]['#url'] ,
    }])
  %}
  {% endfor %}
{% endif %}

{% include "@molecules/inline-menu/inline-menu.twig"
  with {
    variation: variation,
    title: content.field_inline_menu_title[0] ? content.field_inline_menu_title[0]['#text'],
    body: content.field_inline_menu_description[0] ? content.field_inline_menu_description,
    links: items,
    directory: 'themes/mainspring-theme',
    inline_menu_icon: content.field_inline_menu_icon[0] ? content.field_inline_menu_icon[0]['#text'],
    inline_menu_icon_size: content.field_inline_menu_icon_size[0] ? content.field_inline_menu_icon_size[0]['#markup'],
    inline_menu_icon_color: false,
  } only
%}