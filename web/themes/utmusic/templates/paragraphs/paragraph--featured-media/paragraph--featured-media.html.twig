{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set featured_media_items = [] %}

{% if content.field_featured_media_items[0] %}
  {% set featured_media_items_count = content.field_featured_media_items['#items'].getIterator()|length - 1 %}

  {% for i in 0..featured_media_items_count %}
    {% set label = content.field_featured_media_items['#items'][i].entity.label %}
    {% set featured_media_items = featured_media_items|merge([{ "caption": label, 'video_type': 'embed', 'video': content.field_featured_media_items[i] }]) %}
  {% endfor %}
{% endif %}

{% include "@molecules/featured-media/featured-media.twig" with {
    directory: 'themes/utmusic',
    title: content.field_featured_media_title[0] ? content.field_featured_media_title[0]['#text'],
    featured_media_items: featured_media_items,
    number_items: featured_media_items_count,
  } only
%}

{{ attach_library('utmusic/featured-media')}}
