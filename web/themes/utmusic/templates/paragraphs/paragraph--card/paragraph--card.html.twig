{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('utmusic/card') }}

{# Check if there is an image #}
{# {% if content.field_card_image[0] %} #}
  {# Get image path, alt and image style field #}
  {# {% set image_file_path = content.field_card_image[0]['#media'].field_ed_image_image.entity.uri.value %}
  {% set image_file_alt = content.field_card_image[0]['#media'].field_ed_image_image.0.alt %}
  {% set image_file_width = content.field_card_image[0]['#media'].field_ed_image_image.0.width %}
  {% set image_file_height = content.field_card_image[0]['#media'].field_ed_image_image.0.height %}
  {% set image_style_field = content.field_card_image_crop[0] ? content.field_card_image_crop[0]['#markup'] %} #}

  {# If there are image_stye and image_width values, create responsive_image_style #}
  {# {% if image_style_field is not empty %}
    {% set responsive_image_style = 'card_' ~ image_style_field %} #}
  {# Else, the default will be full width of column image style #}
  {# {% else %}
    {% set responsive_image_style = 'card_scale_width' %}
  {% endif %} #}

  {# {% if responsive_image_style %} #}
    {# create responsive image #}
    {# {% set image = drupal_image(image_file_path, responsive_image_style, {'alt': image_file_alt, 'width': image_file_width, 'height': image_file_height} ,responsive=true) %}
  {% endif %}
{% endif %} #}

{% set image = content.field_card_image[0] ? content.field_card_image %}

{# Get categories #}
{% set categories = [] %}
{% if content.field_card_categories[0] %}
  {% set count = content.field_card_categories['#items'].getIterator()|length -1 %}

  {% for i in 0..count %}
    {% set categories = categories|merge([content.field_card_categories[i]]) %}
  {% endfor %}
{% endif %}

{% set variation = content.field_card_variation[0] ? content.field_card_variation[0]['#markup'] %}

{% set illustration_file_type = content.field_card_illustration[0] ? content.field_card_illustration[0]['#media'].field_media_image.entity.filemime.value %}
{% set illustration = content.field_card_illustration[0] ? content.field_card_illustration %}
{% set illustration_size = content.field_card_illustration_size[0] ? content.field_card_illustration_size[0]['#markup'] %}

{% set title = content.field_card_title[0] ? content.field_card_title[0]['#text'] %}
{% set title_appearance = content.field_card_title_appearance[0] ? content.field_card_title_appearance[0]['#markup'] %}
{% set title_html_element = content.field_card_title_html_element[0] ? content.field_card_title_html_element[0]['#markup'] %}

{% set description = content.field_card_description[0] ? content.field_card_description %}
{% set link_label = content.field_card_button_label[0] ? content.field_card_button_label[0]['#text'] %}
{% set link_url = content.field_card_button_url[0] ? content.field_card_button_url[0]['#url'] %}
{% set aria_label = content.field_card_button_aria_label[0] ? content.field_card_button_aria_label[0]['#context'].value %}

{% include "@molecules/card/card.twig" with {
    unpublished: unpublished,
    directory: directory,
    variation: variation,
    illustration: illustration,
    illustration_file_type: illustration_file_type,
    illustration_size: illustration_size,
    image: image,
    title: title,
    title_appearance: title_appearance,
    title_html_element: title_html_element,
    description: description,
    categories: categories,
    link_label: link_label,
    link_url: link_url,
    aria_label: aria_label,
  }
%}
