<?php

use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;


/**
 * Implements hook_update_N().
 */
function content_updates_update_10015() {
  // Query to get all paragraph entities of type 'card'.
  $query = \Drupal::entityQuery('paragraph')
    ->condition('type', 'card')
    ->accessCheck(FALSE);
  $ids = $query->execute();

  foreach ($ids as $id) {
    // Load the paragraph entity.
    $paragraph = \Drupal\paragraphs\Entity\Paragraph::load($id);

    if ($paragraph) {
      $field_card_button_url = $paragraph->get('field_card_button_url')->getString();
      $field_card_button_label = $paragraph->get('field_card_button_label')->getString();
      $field_card_button_format = '';

      if (!empty($field_card_button_url) && !empty($field_card_button_label)) {
        $field_card_button_format = 'button';
      }
      elseif (!empty($field_card_button_url)) {
        $field_card_button_format = 'title_link';
      }
      else {
        $field_card_button_format = '_none';
      }

      // Update the field_card_button_format field.
      $paragraph->set('field_card_button_format', $field_card_button_format);
      $paragraph->save();
    }
  }
}

/**
 * Update fact_group paragraph type.
 */
function content_updates_update_10016() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $storage = $entity_type_manager->getStorage('paragraph');
  $entities = $storage->loadByProperties(['type' => 'fact_group']);

  foreach ($entities as $entity) {
    $entity->set('field_fact_group_columns', '3');
    $entity->set('field_fact_group_font_size', 'large');
    $entity->save();
  }

  return t('Updated fact_group paragraph type.');
}